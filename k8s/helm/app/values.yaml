# values.yaml

# Number of replicas for your to-do-app
replicaCount: 4  

# Container image details for the to-do-app
image:
  repository: sharara99/to-do-app    # Your image repository
  imagePullPolicy: Always  
tag: '24'

# Image pull secrets (if you use a private registry)
imagePullSecrets: []

# Helm chart name overrides
nameOverride: ""
fullnameOverride: ""

# Service Account configuration
serviceAccount:
  create: true  # If true, a ServiceAccount will be created
  automount: true
  annotations: {}
  name: ""      # Leave blank to auto-generate service account name

# Pod annotations and labels
podAnnotations: {}
podLabels: {}

# Pod security context
podSecurityContext: {}
securityContext: {}

# Service configuration for to-do-app
service:
  type: NodePort   # Changed to NodePort for accessibility
  port: 3000       # The port for the service

# Ingress configuration (if needed, enable this section)
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Resource requests and limits for to-do-app (adjust as needed)
resources:
  requests:
    memory: "256Mi"  # Minimum memory request
    cpu: "500m"      # Minimum CPU request
  limits:
    memory: "512Mi"  # Maximum memory limit
    cpu: "1"         # Maximum CPU limit

# Liveness and readiness probes for to-do-app
livenessProbe:
  httpGet:
    path: /health  # Adjust path as needed
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /ready  # Adjust path as needed
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

# Autoscaling settings (you can enable if needed)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

# Volumes and VolumeMounts (if any)
volumes: []
volumeMounts: []

# NodeSelector, tolerations, and affinity for scheduling
nodeSelector: {}
tolerations: []
affinity: {}
